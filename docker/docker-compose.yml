services:
  # Development service
  fastapi-dev:
    build:
      context: ..
      dockerfile: docker/Dockerfile.dev
    container_name: fastapi-data-extractor-dev
    profiles: ["dev"]
    ports:
      - "8000:8000"
    env_file:
      - ../.env
    environment:
      - DEBUG=true
      - LOG_LEVEL=DEBUG
    volumes:
      - ../data:/app/data
      - ../logs:/app/logs
    develop:
      watch:
        # Sync source code changes
        - action: sync
          path: ../app
          target: /app/app
          ignore:
            - __pycache__/
            - "*.pyc"
        # Sync config changes
        - action: sync
          path: ../
          target: /app
          ignore:
            - .venv/
            - __pycache__/
            - "*.pyc"
            - .git/
            - docker/
        # Rebuild on dependency changes
        - action: rebuild
          path: ../pyproject.toml
        - action: rebuild
          path: ../uv.lock
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Production service
  fastapi-prod:
    build:
      context: ..
      dockerfile: docker/Dockerfile.prod
    container_name: fastapi-data-extractor-prod
    profiles: ["prod"]
    ports:
      - "8000:8000"
    env_file:
      - ../.env
    environment:
      - DEBUG=false
      - LOG_LEVEL=INFO
    volumes:
      - ../data:/app/data
      - ../logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: fastapi-nginx
    profiles: ["prod"]
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - fastapi-prod
    restart: unless-stopped

  # Redis (shared by both environments)
  redis:
    image: redis:7-alpine
    container_name: fastapi-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - fastapi-network
    profiles: ["dev", "prod"]

networks:
  fastapi-network:
    driver: bridge

volumes:
  redis-data:
